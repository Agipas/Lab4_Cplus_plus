//
//The hierarchy of classes plane figures and their description algorithmic language C++
//

#include "stdafx.h"
#include <iostream>

using namespace std;

class Figurs{
	public:
	virtual double Square() {return 0;}
	virtual double Perimeter(){return 0;}
	virtual int Get() {return 0;}
	virtual double Long() {return 0;}
};

class Triangle : public Figurs{				//Triangle
public:
	virtual double Square() { return 0; }
	virtual double Perimeter() { return 0; }
	virtual int Get() { return 0; }
};

class Square : public Figurs {				//Square
public:
	virtual double Squares() {return 0;}
	virtual double Perimeter(){return 0;}
	virtual int Get() {return 0;}
};						

class Circle : public Figurs{				//Circle
public:
	virtual int Get() {return 0;}
	virtual double Long() {return 0;}
	virtual double Perimeter(){return 0;}
};			


class Arbitrary : public Triangle{			//Arbitrary
public:
	
	int Get()
	{
		cout << "Enter side 1: ";cin >> side1;
		cout << "Enter side 2: ";cin >> side2;
		cout << "Enter side 3: ";cin >> side3;
		cout << "Enter the radius of the inscribed circle of triangle: ";cin >> radius;
		return 0;
	}
	double Square()
	{
		return ((side1 + side2 + side3)*radius) / 2;


	}
	double Perimeter() {
		return (side1 + side2 + side3) / 2;
	}
private: double side1;
		 double side2;
		 double side3;
		 double radius;
};

class Straight : public Triangle{			//Straight
public:
	double side1;
	double side2;
	double side3;

	int Get()
	{cout << "Enter legs 1: ";cin >> side1;
	cout << "Enter legs 2: ";cin >> side2;
	return 0;
	}
	double Square() {return (side1*side2) / 2;}
};


class Square_correct : public Square {			//Square correct
public:
	double side;
	int Get(){
		cout << "Enter side : ";
		cin >> side;
		return 0;}
	double Squares() {return side*side;}
	double Perimeter(){return side*4;}
};

class Rectangle : public Square{			//Rectangle
public:
	double side1;
	double side2;
	int Get()
	{cout << "Enter side 1 : ";    cin >> side1;
	cout << "Enter side 2 : ";    cin >> side2;return 0;}
	double Squares() {return side1*side2;}
	double Perimeter(){return (side1 * 2) + (side2 * 2);}
};

class Parallelogram : public Square{			//Parallelogram
public:
	double side1;
	double side2;
	double angle;
	int Get()
	{
		cout << "Enter side 1 : ";	cin >> side1;
		cout << "Enter side 2 : ";	cin >> side2;
		cout << "Enter angle(sin) : ";	cin >> angle;
		return 0;}
	double Squares() {return side1*side2*sin(angle);}
	double Perimeter(){return (side1 * 2) + (side2 * 2);}
};

class Diamond : public Square{				//Diamond
public:
	double side1;
	double side2; 
	int Get(){
		cout << "Enter the diagonal 1 : ";	cin >> side1;
		cout << "Enter the diagonal 2 : ";	cin >> side2;
		return 0;}
	double Squares() {return (side1*side2)/2;}
};


class Round : public Circle {				//Round
public:
	double r;
	int Get(){cout << "Enter radius : ";	cin >> r;return 0;}
	double Long() {return 2 * r;}
};

class Ellipse : public Circle {				//Ellipse
public:
	double a,b;
	int Get()
	{
		cout << "Enter the length of semi-major axis: ";	cin >> a;
		cout << "Enter the length of the short axis: ";	cin >> b;
		return 0;
	}
	virtual double Perimeter()
	{
		return (b*a) / 2;
	}
};


int main()

{

	

	cout << "Select Figure :" << endl;
	cout <<"1. Arbitrary " << endl;
	cout <<"2. Straight " << endl;
	cout <<"3. Square correct " << endl;
	cout <<"4. Rectangle " << endl;
	cout <<"5. Parallelogram " << endl;
	cout <<"6. Diamond " << endl;
	cout <<"7. Round " << endl;
	cout <<"8. Ellipse " << endl;
	
	int choise;
	cin >> choise;
	cout << endl;
	if (choise == 1)
	{Triangle *ptr1 = new Arbitrary;
		ptr1->Get();
		cout << endl;
		cout << "Square="<< ptr1->Square() << endl;
		cout << "Perimeter=" << ptr1->Perimeter() << endl;
	}
	else if (choise == 2)
	{Triangle *ptr2 = new Straight;
		ptr2 ->Get();
		cout << endl;
		cout<< "Square=" << ptr2->Square() << endl;
	}
	else if (choise == 3)
	{Square *ptr3 = new Square_correct;
		ptr3 ->Get();
		cout << endl;
		cout << "Square=" << ptr3->Squares() << endl;
		cout << "Perimeter=" << ptr3->Perimeter() << endl;
	}
	else if (choise == 4)
	{Square *ptr4 = new Rectangle;
		ptr4 ->Get();
		cout << endl;
		cout << "Square=" << ptr4->Squares() << endl;
		cout << "Perimeter=" << ptr4->Perimeter() << endl;
	}
	else if (choise == 5)
	{Square *ptr5 = new Parallelogram;
		ptr5->Get();
		cout << endl;
		cout << "Square=" << ptr5->Squares() << endl;
		cout << "Perimeter=" << ptr5->Perimeter() << endl;
	}
	else if (choise == 6)
	{Square *ptr6 = new Diamond;
		ptr6->Get();
		cout << endl;
		cout << "Square=" << ptr6->Squares() << endl;
	}

	else if (choise == 7) 
	{Circle  *ptr7 = new Round;
		cout << endl;
		ptr7->Get();
		cout << "Circuit=" << ptr7->Long()<<"Pi" << endl;
	}
	else if (choise == 8) 
	{Circle  *ptr8 = new Ellipse;
		cout << ptr8->Get() << endl;
		cout << "Focal perimeter=" << ptr8->Perimeter() << endl;
	}
	else {
		cout << "Wrong number";
	}
}
